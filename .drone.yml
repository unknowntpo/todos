kind: pipeline
name: default
workspace:
  base: /go
  path: src/github.com/unknowntpo/todos
steps:
  - name: test
    image: golang
    commands:
    - go install honnef.co/go/tools/cmd/staticcheck@latest
    - make vendor
        #- make audit
  - name: build
    image: golang
    commands:
      #- make build/api
      #- chmod +x ./bin/api
  - name: coverage
    image: plugins/codecov
    settings:
      token:
        from_secret: codecov_token
      files:
        - '*.go'
      required: true
  - name: deploy
    image: docker:dind
    environment:
      DRONE_DEPLOY_HOST:
        from_secret: deploy_host
      DRONE_DEPLOY_USERNAME:
        from_secret: deploy_user
    volumes:
      - name: dockersock
        path: /var/run
    commands:
      - sleep 30 # give docker enough time to initialize
      - docker ps -a
      - echo $${DRONE_DEPLOY_HOST}
      - echo $${DRONE_DEPLOY_USERNAME}
      - docker context create remote --docker "host=ssh://$${DRONE_DEPLOY_HOST}@$${DRONE_DEPLOY_USERNAME}"
      # - make run/compose/up
      # todo fetch from docker hub
      - DOCKER_BUILDKIT=1 docker-compose \
        -f docker-compose-prod.yml \
        --project-name todos-prod \
        build --parallel
      - docker-compose -f docker-compose-prod.yml \
        --context remote \
        --env-file .envrc \
        up \
        -d \
        --remove-orphans \
        --force-recreate



# Specify docker:dind as a service
# Ref: https://github.com/testcontainers/dind-drone-plugin
services:
- name: docker
  image: hmajid2301/dind-docker-compose@sha256:522c274a1da3f363f195251557b211447dbcbc6c2d9fa4b64ad0237e2ec33f94
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
  detach: true
  commands:
volumes:
  - name: dockersock
    temp: {}
